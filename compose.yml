services:
  iac-vault-server:
    image: docker.io/hashicorp/vault:1.20.2
    container_name: iac-vault-server
    user: "${HOST_UID}:${HOST_GID}"
    volumes:
      - ./vault/vault.hcl:/vault/vault.hcl:z
      - ./vault/data:/vault/data:z
      - ./vault/tls:/vault/tls:z
    cap_add:
      - IPC_LOCK
      - SETFCAP
    network_mode: "host"
    command: server -config=/vault/vault.hcl
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "vault status -address=https://127.0.0.1:8200 -tls-skip-verify || if [ $? -eq 2 ]; then exit 0; else exit 1; fi",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  iac-controller:
    build:
      context: .
      dockerfile: Containerfile
      args:
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
        LIBVIRT_GID: ${LIBVIRT_GID}
        USERNAME: ${UNAME}
    image: iac-kubeadm-controller:qemu-latest
    container_name: iac-controller-qemu
    privileged: true
    cap_add:
      - NET_ADMIN
    network_mode: "host"
    security_opt:
      - label=disable
      - apparmor=unconfined # Do not apply any AppArmor security profile to it
    group_add:
      - "${LIBVIRT_GID}" # Add container user to the host's libvirt group by GID
    env_file:
      - .env
    environment:
      - VAULT_CACERT=/app/vault/tls/ca.pem
    volumes:
      - .:/app:U,z
      - ${UHOME}/.cache/packer:/home/${UNAME}/.cache/packer:U,z
      - ${UHOME}/.ssh:/home/${UNAME}/.ssh:U,z
      - /dev/kvm:/dev/kvm
      - /var/run/libvirt/libvirt-sock:/var/run/libvirt/libvirt-sock
      - /dev/net/tun:/dev/net/tun
    tty: true
    stdin_open: true
