---
- name: "Section A: Generate and register cluster join parameters"
  block:
    - name: "Step 1. Check if admin.conf exists on the primary master"
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: admin_conf

    - name: "Step 2. Assert that kubeadm init was successful before proceeding"
      ansible.builtin.assert:
        that: admin_conf.stat.exists
        fail_msg: "Cannot generate join parameters because kubeadm init seems to have failed (admin.conf not found)."

    - name: "Step 3. Create a new token"
      ansible.builtin.command: kubeadm token create
      register: kubeadm_token_result
      changed_when: kubeadm_token_result.rc == 0

    - name: "Step 4. Get the CA certificate hash"
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt |
          openssl rsa -pubin -outform der 2>/dev/null |
          openssl dgst -sha256 -hex | sed 's/^.* //'
        executable: /bin/bash
      register: kubeadm_ca_hash_result
      changed_when: false

    - name: "Step 5. Upload certs and get the certificate key"
      ansible.builtin.command: kubeadm init phase upload-certs --upload-certs
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: cert_key_result
      changed_when: "'certificate key' in cert_key_result.stdout"

    - name: "Step 6. Register join parameters as facts"
      ansible.builtin.set_fact:
        kubeadm_token: "{{ kubeadm_token_result.stdout }}"
        kubeadm_ca_hash: "{{ kubeadm_ca_hash_result.stdout }}"
        kubeadm_cert_key: "{{ cert_key_result.stdout_lines | last }}"
        cacheable: true
