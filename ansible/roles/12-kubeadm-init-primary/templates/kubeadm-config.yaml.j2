---
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
nodeRegistration:
  name: "{{ inventory_hostname }}"
  kubeletExtraArgs:
    - name: container-runtime-endpoint
      value: "unix:///var/run/crio/crio.sock"
    - name: cgroup-driver
      value: "systemd"
localAPIEndpoint:
  advertiseAddress: "{{ advertise_ip }}"
  bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
kubernetesVersion: "v1.32.0"
controlPlaneEndpoint: "{{ K8S_HA_VIRTUAL_IP }}:6443"
apiServer:
  certSANs:
    - "{{ K8S_HA_VIRTUAL_IP }}"
    - "kubernetes"
    - "kubernetes.default"
    - "kubernetes.default.svc"
    - "kubernetes.default.svc.cluster.local"
{% for ip in K8S_MASTER_IPS %}
    - "{{ ip }}"
{% endfor %}

networking:
  podSubnet: "{{ K8S_POD_SUBNET }}"

etcd:
  local:
    extraArgs:
      - name: initial-cluster
        value: "{% for host in groups['master'] %}{{ host }}=https://{{ hostvars[host]['advertise_ip'] }}:2380{% if not loop.last %},{% endif %}{% endfor %}"
      - name: initial-cluster-state
        value: "new"
      - name: listen-client-urls
        value: "https://127.0.0.1:2379,https://{{ advertise_ip }}:2379"
      - name: advertise-client-urls
        value: "https://{{ advertise_ip }}:2379"
      - name: listen-peer-urls
        value: "https://{{ advertise_ip }}:2380"
      - name: initial-advertise-peer-urls
        value: "https://{{ advertise_ip }}:2380"
    serverCertSANs:
      - "{{ inventory_hostname }}"
{% for ip in K8S_MASTER_IPS %}
      - "{{ ip }}"
{% endfor %}
    peerCertSANs:
      - "{{ inventory_hostname }}"
{% for ip in K8S_MASTER_IPS %}
      - "{{ ip }}"
{% endfor %}
