---
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
nodeRegistration:
  name: "{{ inventory_hostname }}"
  kubeletExtraArgs:
    - name: container-runtime-endpoint
      value: "unix:///var/run/crio/crio.sock"
    - name: cgroup-driver
      value: "systemd"
localAPIEndpoint:
  advertiseAddress: "{{ advertise_ip }}"
  bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
kubernetesVersion: "v1.32.0"
{# imageRepository: "{{ registry_host }}" #}
{% if (groups['master'] | length) > 1 %}
controlPlaneEndpoint: "{{ k8s_ha_virtual_ip }}:6443"
{% else %}
controlPlaneEndpoint: "{{ advertise_ip }}:6443"
{% endif %}
apiServer:
  extraArgs:
    - name: bind-address
      value: "{{ advertise_ip }}"
    - name: etcd-servers
      value: "https://127.0.0.1:2379"
  certSANs:
    - "{{ k8s_ha_virtual_ip }}"
    - "kubernetes"
    - "kubernetes.default"
    - "kubernetes.default.svc"
    - "kubernetes.default.svc.cluster.local"
{% for ip in k8s_master_ips %}
    - "{{ ip }}"
{% endfor %}
networking:
  podSubnet: "{{ k8s_pod_subnet }}"
etcd:
  local:
    serverCertSANs:
{% for host in groups['master'] %}
      - "{{ host }}"
{% endfor %}
{% for ip in k8s_master_ips %}
      - "{{ ip }}"
{% endfor %}
    peerCertSANs:
{% for host in groups['master'] %}
      - "{{ host }}"
{% endfor %}
{% for ip in k8s_master_ips %}
      - "{{ ip }}"
{% endfor %}
