# Global settings for the Patroni cluster
scope: postgres-ha-cluster # A unique name for the cluster
namespace: /service/postgres/ # The base path in etcd for this cluster's data
name: {{ inventory_hostname }}

# REST API for health checks and management
restapi:
  listen: "{{ ansible_host }}:8008"
  connect_address: "{{ ansible_host }}:8008"

# etcd configuration for Distributed Configuration Store (DCS)
etcd3:
  hosts:
{% for ip in etcd_cluster_ips %}
    - {{ ip }}:2379
{% endfor %}
  ttl: 30

# Bootstrap configuration (only used by the first node to initialize the cluster)
bootstrap:
  dcs:
    ttl: 20
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
  initdb:
    - encoding: UTF8
    - data-checksums
    - auth-host: md5
    - auth-local: md5
  pg_hba:
    - host all all {{ postgres_allowed_subnet }} md5
    - host replication repuser {{ postgres_allowed_subnet }} md5
    - host all all 127.0.0.1/32 md5
    - host replication repuser 127.0.0.1/32 md5

# PostgreSQL server configuration managed by Patroni
postgresql:
  listen: "{{ ansible_host }}:5432"
  connect_address: "{{ ansible_host }}:5432"
  data_dir: /var/lib/postgresql/18/data # Patroni will manage this directory
  pgpass: /tmp/pgpass{{ postgresql_port | default(5432) }}
  
  # These credential is managed by HashiCorp Vault via Terraform
  authentication:
    replication:
      username: repuser
      password: "{{ pg_replication_password }}"
    superuser:
      username: postgres
      password: "{{ pg_superuser_password }}"
  
  # Key parameters for replication and HA
  parameters:
    max_connections: 100
    max_wal_senders: 10
    wal_level: replica
    hot_standby: "on"
