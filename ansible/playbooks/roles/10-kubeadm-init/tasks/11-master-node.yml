---
- name: Section A. Set up master node block\
  block:
    - name: "Step 1. Create kubelet configuration for CRI-O"
      ansible.builtin.copy:
        dest: "/etc/default/kubelet"
        content: "KUBELET_EXTRA_ARGS=--container-runtime-endpoint=unix:///var/run/crio/crio.sock"
        mode: '0644'

    - name: "Step 2. Flush all pending handlers NOW"
      ansible.builtin.meta: flush_handlers

    - name: "Step 3. Initialize kubeadm"
      ansible.builtin.command: >-
        kubeadm init
        --apiserver-advertise-address={{ advertise_ip }}
        --pod-network-cidr=10.244.0.0/16
        --node-name={{ inventory_hostname }}
        --ignore-preflight-errors=Swap
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_init
      changed_when: "'Your Kubernetes control-plane has initialized successfully!' in kubeadm_init.stdout"

    - name: "Step 4a. Create .kube directory for the root user"
      ansible.builtin.file:
        path: "/root/.kube"
        state: directory
        mode: '0755'

    - name: "Step 4b. Copy admin.conf to root's kube config"
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "/root/.kube/config"
        remote_src: true
        mode: '0600'

    - name: "Step 4c. Create .kube directory for the user"
      ansible.builtin.file:
        path: "/home/{{ ansible_ssh_user }}/.kube"
        state: directory
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: '0755'

    - name: "Step 4d. Copy admin.conf to user's kube config"
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ ansible_ssh_user }}/.kube/config"
        remote_src: true
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: '0644'

    - name: "Step 5. Install the Tigera Calico operator"
      ansible.builtin.command: >-
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/tigera-operator.yaml
      # Operator apply is idempotent
      args:
        creates: /etc/kubernetes/calico-operator-installed.flag
      register: calico_operator_create
      changed_when: "'created' in calico_operator_create.stdout"
      notify: Create Calico operator flag file

    - name: "Step 6. Download Calico custom resources manifest"
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/custom-resources.yaml"
        dest: "/tmp/calico-custom-resources.yaml"
        mode: '0644'

    - name: "Step 7. Update Calico manifest with the correct pod CIDR"
      ansible.builtin.replace:
        path: "/tmp/calico-custom-resources.yaml"
        regexp: 'cidr: 192.168.0.0/16'
        replace: 'cidr: 10.244.0.0/16'

    - name: "Step 8. Apply the customized Calico resources"
      ansible.builtin.command: "kubectl apply -f /tmp/calico-custom-resources.yaml"
      register: calico_apply
      changed_when: "'created' in calico_apply.stdout or 'configured' in calico_apply.stdout"

    - name: "Step 9. Generate and store join command"
      ansible.builtin.command: kubeadm token create --print-join-command
      register: join_command
      changed_when: false

    - name: "Step 10. Register join command as a fact"
      ansible.builtin.set_fact:
        # Store the command in a variable that is visible to all hosts in subsequent plays.
        kubeadm_join_command: "{{ join_command.stdout_lines[0] }}"
      when: join_command.stdout_lines | length > 0
